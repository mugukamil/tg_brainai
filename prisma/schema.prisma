generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model gpt_tg_users {
  id                 String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  telegram_id        BigInt?
  openai_thread_id   String?
  text_req_left      Int           @default(15)
  image_req_left     Int           @default(3)
  video_req_left     Int           @default(3)
  accepted_terms     Boolean?      @default(false)
  current_mode       String        @default("text")
  is_premium         Boolean?      @default(false)
  premium_end_date   DateTime?     @db.Timestamptz(6)
  created_at         DateTime      @default(now()) @db.Timestamptz(6)
  updated_at         DateTime      @default(now()) @db.Timestamptz(6)
  premium_started_at DateTime?     @db.Timestamptz(6)
  free_period_start  DateTime?     @db.Date
  image_provider     String?       @default("goapi") @db.VarChar(10)
  user_quotas        user_quotas[]

  @@index([telegram_id], map: "idx_gpt_tg_users_telegram_id")
}

model telegram_users {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date_created     DateTime @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  telegram_id      BigInt?
  openai_thread_id String?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model user_quotas {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String       @db.Uuid
  period_start DateTime     @db.Date
  period_end   DateTime     @db.Date
  text_used    Int          @default(0)
  image_used   Int          @default(0)
  video_used   Int          @default(0)
  reset_at     DateTime     @default(now()) @db.Timestamptz(6)
  created_at   DateTime     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime     @default(now()) @db.Timestamptz(6)
  gpt_tg_users gpt_tg_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, period_start])
  @@index([period_start], map: "idx_user_quotas_period_start")
  @@index([user_id, period_start], map: "idx_user_quotas_user_id_period_start")
}
